/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SPunkWrapper, SPunkWrapperInterface } from "../SPunkWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ILongShortPairContract",
        name: "_longShortPairContract",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_longPunkToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_shortPunkToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "longPunkToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Direction",
        name: "direction",
        type: "uint8",
      },
      {
        internalType: "contract IBalancerV2Vault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintAndSell",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "shortPunkToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class SPunkWrapper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _longShortPairContract: string,
    _collateralToken: string,
    _longPunkToken: string,
    _shortPunkToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SPunkWrapper> {
    return super.deploy(
      _longShortPairContract,
      _collateralToken,
      _longPunkToken,
      _shortPunkToken,
      overrides || {}
    ) as Promise<SPunkWrapper>;
  }
  getDeployTransaction(
    _longShortPairContract: string,
    _collateralToken: string,
    _longPunkToken: string,
    _shortPunkToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _longShortPairContract,
      _collateralToken,
      _longPunkToken,
      _shortPunkToken,
      overrides || {}
    );
  }
  attach(address: string): SPunkWrapper {
    return super.attach(address) as SPunkWrapper;
  }
  connect(signer: Signer): SPunkWrapper__factory {
    return super.connect(signer) as SPunkWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SPunkWrapperInterface {
    return new utils.Interface(_abi) as SPunkWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SPunkWrapper {
    return new Contract(address, _abi, signerOrProvider) as SPunkWrapper;
  }
}
